name: Docker Image CI

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*"
      - "v*.*"
      - "v*.*.*"
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        ports:
          - "5432:5432"
        options: >-
          --health-cmd="pg_isready -U user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - uses: actions/checkout@v4

    - name: Installing dependencies
      run: |
        echo "Installing dependencies..."
        pip3 install --upgrade pip
        pip3 install -r requirements.txt

    - name: Tests
      run: |
        echo "Running tests..."
        export DATABASE_URL=postgres://user:password@db:5432/test_db
        python3 django/manage.py test warehouse.tests

    - name: Log in to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build the Docker image
      run: |
        REPO_LC=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
        docker build . --file Dockerfile --tag ghcr.io/${REPO_LC}:latest

    - name: Push the Docker image
      if: github.event_name != 'pull_request'
      run: |
        REPO_LC=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
        
        docker push ghcr.io/${REPO_LC}:latest
        if [[ "${{ github.ref_type }}" == "tag" ]]; then
          docker tag ghcr.io/${REPO_LC}:latest ghcr.io/${REPO_LC}:${{ github.ref_name }}
          docker push ghcr.io/${REPO_LC}:${{ github.ref_name }}
        fi

    - name: Remove local Docker images
      if: always()
      run: docker image prune -af
